import java.util.Scanner;
// ============================= ABSTRACT CLASS Car_Factory =============================//
abstract class Car_Factory{	
	
	//declaration of data member
	String compnay,car_name;
	double budget;
	
	//declaration of abstract methods
	abstract void getprice(double price);
	abstract void detail(String company_name,String car_name);
	abstract void accessories();
	
	//declaration and implentation of input method
	void input() {
		Scanner scan =new Scanner (System.in);//creating object of scanner class
		System.out.print("Company- ");
		 compnay=scan.next();//taking input from user
		System.out.print("Car- ");
		 car_name=scan.next();//taking input from user
		System.out.print("Rough Budget(in Lakhs)- ");
		 budget=scan.nextDouble();//taking input from user
	}
	void display(Car_Factory obj1) {
		//calling the methods//
		obj1.getprice(budget);//calling getprice method
		System.out.println("\n-----------------------------------");
		obj1.detail(compnay, car_name);//calling detail method
		System.out.println("\n-----------------------------------");
		obj1.accessories();//calling accessories method
		System.out.println("\n-----------------------------------");
	}

}

//=============================  CLASS Small_car =============================//
class Small_car extends Car_Factory{
	String Ans;//declaration of data member
	
	//method for getprice 
	public void getprice(double price) {
		if(price>2&&price<5) 
			Ans="No";	//modify Ans
		else 
			Ans="Yes";	//modify Ans
		
	}
	//method for displaying car detail//
	public void detail(String company_name,String car_name) {
		System.out.println("Company- "+company_name);
		System.out.println("Name of Car- "+car_name);
		
	}
	
	//method to display accessories of car//
	public void accessories() {
		System.out.println("Types of Tyres- Alloy Wheels");
		System.out.println("Airbags- "+Ans);
		
	}
}

//=============================  CLASS Sedan =============================//
class Sedan extends Car_Factory{
	String Ans;//declaration of data member
	
	//method for getprice 
	public void getprice(double price) {	
		if(price>6&&price<10) 
			Ans="No";	//modify Ans
		else 
			Ans="Yes";	//modify Ans
	}
	
	//method for displaying car detail//
	public void detail(String company_name,String car_name) {
		System.out.println("Company- "+company_name);
		System.out.println("Name of Car- "+car_name);
		
	}
	//method to display accessories of car//
	public void accessories() {
		System.out.println("Types of Tyres- Alloy Wheels");
		System.out.println("Airbags- YES");
		
	}
}

//=============================  CLASS Small_car =============================//
class Luxary extends Car_Factory{
	String Ans;//declaration of data member
	
	//method for getprice 
	public void getprice(double price) {
		if(price>10&&price<14) 
			Ans="No";	//modify Ans
		else 
			Ans="Yes";	//modify Ans
	}
	
	//method for displaying car detail//
	public void detail(String company_name,String car_name) {
		System.out.println("Company- "+company_name);
		System.out.println("Name of Car- "+car_name);
		
	}
	
	//method to display accessories of car//
	public void accessories() {
		System.out.println("Types of Tyres- Alloy Wheels");
		System.out.println("Airbags- YES");
		
	}
}

//============================= MAIN CLASS =============================//
public class prac10 {

	//ststic main method
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan = new Scanner(System.in);//creating object of scanner class
		int ch;
		//double price;
		Car_Factory obj;// object of reference Car_Factory
		while(true){
			//menu driven
			System.out.println("Which Car you want to See?- ");
			System.out.println("\n\t1.Small Car\n\t2.Sedan Car\n\t3.Luxary Car\n\t4.Exit");
			ch=scan.nextInt();//taking input from user
			System.out.println();
			//switch case
			switch(ch) {
	
				case 1:
					obj= new Small_car(); //creating object of Small_car
					obj.input();//calling input method
					obj.display(obj);//calling display method
					break;
					
				case 2:
					obj= new Sedan();//creating object of Sedan
					obj.input();//calling input method
					obj.display(obj);//calling display method
					break;
					
				case 3:
					obj= new Luxary();//creating object of Luxary
					obj.input();//calling input method
					obj.display(obj);//calling display method
					break;
					
				case 4:
					System.out.println("\n-----------------------------------");
					return;//stop execution of program
					
				default:
					System.out.println("INVALID CHOICE !!");//default 
					System.out.println("\n-----------------------------------");
					break;
				
			}
		}
	}
}
